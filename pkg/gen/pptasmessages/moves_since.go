// Code generated by go-swagger; DO NOT EDIT.

package pptasmessages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MovesSince moves since
//
// swagger:model movesSince
type MovesSince struct {

	// moves retrieved since this date
	// Format: date-time
	MoveSinceDate strfmt.DateTime `json:"moveSinceDate,omitempty"`

	// number of moves to return
	NumMoves int64 `json:"numMoves,omitempty"`
}

// Validate validates this moves since
func (m *MovesSince) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMoveSinceDate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MovesSince) validateMoveSinceDate(formats strfmt.Registry) error {
	if swag.IsZero(m.MoveSinceDate) { // not required
		return nil
	}

	if err := validate.FormatOf("moveSinceDate", "body", "date-time", m.MoveSinceDate.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this moves since based on context it is used
func (m *MovesSince) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *MovesSince) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MovesSince) UnmarshalBinary(b []byte) error {
	var res MovesSince
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
