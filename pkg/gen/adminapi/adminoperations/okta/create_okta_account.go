// Code generated by go-swagger; DO NOT EDIT.

package okta

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// CreateOktaAccountHandlerFunc turns a function with the right signature into a create okta account handler
type CreateOktaAccountHandlerFunc func(CreateOktaAccountParams) middleware.Responder

// Handle executing the request and returning a response
func (fn CreateOktaAccountHandlerFunc) Handle(params CreateOktaAccountParams) middleware.Responder {
	return fn(params)
}

// CreateOktaAccountHandler interface for that can handle valid create okta account params
type CreateOktaAccountHandler interface {
	Handle(CreateOktaAccountParams) middleware.Responder
}

// NewCreateOktaAccount creates a new http.Handler for the create okta account operation
func NewCreateOktaAccount(ctx *middleware.Context, handler CreateOktaAccountHandler) *CreateOktaAccount {
	return &CreateOktaAccount{Context: ctx, Handler: handler}
}

/*
	CreateOktaAccount swagger:route POST /create-okta-account Okta createOktaAccount

# Create an Okata Account

This endpoint accepts Okta account creation information and makes a POST request to okta's /api/v1/users endpoint to create the Okta account. Creates an Okta account and returns the account information from Okta.
*/
type CreateOktaAccount struct {
	Context *middleware.Context
	Handler CreateOktaAccountHandler
}

func (o *CreateOktaAccount) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewCreateOktaAccountParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
