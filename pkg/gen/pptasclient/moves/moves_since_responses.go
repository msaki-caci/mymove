// Code generated by go-swagger; DO NOT EDIT.

package moves

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/transcom/mymove/pkg/gen/pptasmessages"
)

// MovesSinceReader is a Reader for the MovesSince structure.
type MovesSinceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MovesSinceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewMovesSinceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewMovesSinceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewMovesSinceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewMovesSinceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /test/getMovesSince] movesSince", response, response.Code())
	}
}

// NewMovesSinceOK creates a MovesSinceOK with default headers values
func NewMovesSinceOK() *MovesSinceOK {
	return &MovesSinceOK{}
}

/*
MovesSinceOK describes a response with status code 200, with default header values.

Moves returned sucessfully
*/
type MovesSinceOK struct {
	Payload *pptasmessages.GetMovesSinceResponse
}

// IsSuccess returns true when this moves since o k response has a 2xx status code
func (o *MovesSinceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this moves since o k response has a 3xx status code
func (o *MovesSinceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this moves since o k response has a 4xx status code
func (o *MovesSinceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this moves since o k response has a 5xx status code
func (o *MovesSinceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this moves since o k response a status code equal to that given
func (o *MovesSinceOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the moves since o k response
func (o *MovesSinceOK) Code() int {
	return 200
}

func (o *MovesSinceOK) Error() string {
	return fmt.Sprintf("[POST /test/getMovesSince][%d] movesSinceOK  %+v", 200, o.Payload)
}

func (o *MovesSinceOK) String() string {
	return fmt.Sprintf("[POST /test/getMovesSince][%d] movesSinceOK  %+v", 200, o.Payload)
}

func (o *MovesSinceOK) GetPayload() *pptasmessages.GetMovesSinceResponse {
	return o.Payload
}

func (o *MovesSinceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(pptasmessages.GetMovesSinceResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMovesSinceBadRequest creates a MovesSinceBadRequest with default headers values
func NewMovesSinceBadRequest() *MovesSinceBadRequest {
	return &MovesSinceBadRequest{}
}

/*
MovesSinceBadRequest describes a response with status code 400, with default header values.

The request was denied.
*/
type MovesSinceBadRequest struct {
	Payload *pptasmessages.ClientError
}

// IsSuccess returns true when this moves since bad request response has a 2xx status code
func (o *MovesSinceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this moves since bad request response has a 3xx status code
func (o *MovesSinceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this moves since bad request response has a 4xx status code
func (o *MovesSinceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this moves since bad request response has a 5xx status code
func (o *MovesSinceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this moves since bad request response a status code equal to that given
func (o *MovesSinceBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the moves since bad request response
func (o *MovesSinceBadRequest) Code() int {
	return 400
}

func (o *MovesSinceBadRequest) Error() string {
	return fmt.Sprintf("[POST /test/getMovesSince][%d] movesSinceBadRequest  %+v", 400, o.Payload)
}

func (o *MovesSinceBadRequest) String() string {
	return fmt.Sprintf("[POST /test/getMovesSince][%d] movesSinceBadRequest  %+v", 400, o.Payload)
}

func (o *MovesSinceBadRequest) GetPayload() *pptasmessages.ClientError {
	return o.Payload
}

func (o *MovesSinceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(pptasmessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMovesSinceUnauthorized creates a MovesSinceUnauthorized with default headers values
func NewMovesSinceUnauthorized() *MovesSinceUnauthorized {
	return &MovesSinceUnauthorized{}
}

/*
MovesSinceUnauthorized describes a response with status code 401, with default header values.

The request was denied.
*/
type MovesSinceUnauthorized struct {
	Payload *pptasmessages.ClientError
}

// IsSuccess returns true when this moves since unauthorized response has a 2xx status code
func (o *MovesSinceUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this moves since unauthorized response has a 3xx status code
func (o *MovesSinceUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this moves since unauthorized response has a 4xx status code
func (o *MovesSinceUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this moves since unauthorized response has a 5xx status code
func (o *MovesSinceUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this moves since unauthorized response a status code equal to that given
func (o *MovesSinceUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the moves since unauthorized response
func (o *MovesSinceUnauthorized) Code() int {
	return 401
}

func (o *MovesSinceUnauthorized) Error() string {
	return fmt.Sprintf("[POST /test/getMovesSince][%d] movesSinceUnauthorized  %+v", 401, o.Payload)
}

func (o *MovesSinceUnauthorized) String() string {
	return fmt.Sprintf("[POST /test/getMovesSince][%d] movesSinceUnauthorized  %+v", 401, o.Payload)
}

func (o *MovesSinceUnauthorized) GetPayload() *pptasmessages.ClientError {
	return o.Payload
}

func (o *MovesSinceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(pptasmessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMovesSinceInternalServerError creates a MovesSinceInternalServerError with default headers values
func NewMovesSinceInternalServerError() *MovesSinceInternalServerError {
	return &MovesSinceInternalServerError{}
}

/*
MovesSinceInternalServerError describes a response with status code 500, with default header values.

An unexpected error has occurred in the server.
*/
type MovesSinceInternalServerError struct {
	Payload *pptasmessages.ClientError
}

// IsSuccess returns true when this moves since internal server error response has a 2xx status code
func (o *MovesSinceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this moves since internal server error response has a 3xx status code
func (o *MovesSinceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this moves since internal server error response has a 4xx status code
func (o *MovesSinceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this moves since internal server error response has a 5xx status code
func (o *MovesSinceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this moves since internal server error response a status code equal to that given
func (o *MovesSinceInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the moves since internal server error response
func (o *MovesSinceInternalServerError) Code() int {
	return 500
}

func (o *MovesSinceInternalServerError) Error() string {
	return fmt.Sprintf("[POST /test/getMovesSince][%d] movesSinceInternalServerError  %+v", 500, o.Payload)
}

func (o *MovesSinceInternalServerError) String() string {
	return fmt.Sprintf("[POST /test/getMovesSince][%d] movesSinceInternalServerError  %+v", 500, o.Payload)
}

func (o *MovesSinceInternalServerError) GetPayload() *pptasmessages.ClientError {
	return o.Payload
}

func (o *MovesSinceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(pptasmessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
