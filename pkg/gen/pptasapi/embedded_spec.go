// Code generated by go-swagger; DO NOT EDIT.

package pptasapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This API does things. For more information, see our detailed documentation.",
    "title": "PPTAS API",
    "contact": {
      "email": "milmove-developers@caci.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "0.0.1"
  },
  "host": "pptaslocal",
  "basePath": "/pptas/v1",
  "paths": {
    "/test/getMovesSince": {
      "post": {
        "description": "summary2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "moves"
        ],
        "summary": "summary",
        "operationId": "movesSince",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/movesSince"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Moves returned sucessfully",
            "schema": {
              "$ref": "#/definitions/GetMovesSinceResponse"
            }
          },
          "400": {
            "$ref": "#/responses/InvalidRequest"
          },
          "401": {
            "$ref": "#/responses/InvalidRequest"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      }
    }
  },
  "definitions": {
    "ClientError": {
      "type": "object",
      "required": [
        "title",
        "detail",
        "instance"
      ],
      "properties": {
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string",
          "format": "uuid"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "GBLOC": {
      "type": "string",
      "enum": [
        "AGFM",
        "APAT",
        "BGAC",
        "BGNC",
        "BKAS",
        "CFMQ",
        "CLPK",
        "CNNQ",
        "DMAT",
        "GSAT",
        "HAFC",
        "HBAT",
        "JEAT",
        "JENQ",
        "KKFA",
        "LHNQ",
        "LKNQ",
        "MAPK",
        "MAPS",
        "MBFL",
        "MLNQ",
        "XXXX"
      ]
    },
    "GetMovesSinceResponse": {
      "type": "object",
      "properties": {
        "movesFound": {
          "$ref": "#/definitions/SearchMoves"
        }
      }
    },
    "MoveStatus": {
      "type": "string",
      "enum": [
        "DRAFT",
        "SUBMITTED",
        "APPROVED",
        "CANCELED"
      ]
    },
    "SearchMove": {
      "type": "object",
      "properties": {
        "branch": {
          "type": "string"
        },
        "destinationDutyLocationPostalCode": {
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5})$",
          "example": "90210"
        },
        "destinationGBLOC": {
          "$ref": "#/definitions/GBLOC"
        },
        "dodID": {
          "type": "string",
          "x-nullable": true,
          "example": "1234567890"
        },
        "firstName": {
          "type": "string",
          "x-nullable": true,
          "example": "John"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "lastName": {
          "type": "string",
          "x-nullable": true,
          "example": "Doe"
        },
        "locator": {
          "type": "string"
        },
        "orderType": {
          "type": "string"
        },
        "originDutyLocationPostalCode": {
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5})$",
          "example": "90210"
        },
        "originGBLOC": {
          "$ref": "#/definitions/GBLOC"
        },
        "requestedDeliveryDate": {
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "requestedPickupDate": {
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "shipmentsCount": {
          "type": "integer"
        },
        "status": {
          "$ref": "#/definitions/MoveStatus"
        }
      }
    },
    "SearchMoves": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/SearchMove"
      }
    },
    "movesSince": {
      "type": "object",
      "properties": {
        "moveSinceDate": {
          "description": "moves retrieved since this date",
          "type": "string",
          "format": "date-time"
        },
        "numMoves": {
          "description": "number of moves to return",
          "type": "integer"
        }
      }
    }
  },
  "responses": {
    "InvalidRequest": {
      "description": "The request was invalid as called.",
      "schema": {
        "$ref": "#/definitions/ClientError"
      }
    },
    "ServerError": {
      "description": "An unexpected error has occurred in the server.",
      "schema": {
        "$ref": "#/definitions/ClientError"
      }
    }
  },
  "tags": [
    {
      "description": "tag to describe test endpoints",
      "name": "test"
    },
    {
      "description": "describes all endpoints relating to moves",
      "name": "moves"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This API does things. For more information, see our detailed documentation.",
    "title": "PPTAS API",
    "contact": {
      "email": "milmove-developers@caci.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "0.0.1"
  },
  "host": "pptaslocal",
  "basePath": "/pptas/v1",
  "paths": {
    "/test/getMovesSince": {
      "post": {
        "description": "summary2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "moves"
        ],
        "summary": "summary",
        "operationId": "movesSince",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/movesSince"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Moves returned sucessfully",
            "schema": {
              "$ref": "#/definitions/GetMovesSinceResponse"
            }
          },
          "400": {
            "description": "The request was invalid as called.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "401": {
            "description": "The request was invalid as called.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "500": {
            "description": "An unexpected error has occurred in the server.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ClientError": {
      "type": "object",
      "required": [
        "title",
        "detail",
        "instance"
      ],
      "properties": {
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string",
          "format": "uuid"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "GBLOC": {
      "type": "string",
      "enum": [
        "AGFM",
        "APAT",
        "BGAC",
        "BGNC",
        "BKAS",
        "CFMQ",
        "CLPK",
        "CNNQ",
        "DMAT",
        "GSAT",
        "HAFC",
        "HBAT",
        "JEAT",
        "JENQ",
        "KKFA",
        "LHNQ",
        "LKNQ",
        "MAPK",
        "MAPS",
        "MBFL",
        "MLNQ",
        "XXXX"
      ]
    },
    "GetMovesSinceResponse": {
      "type": "object",
      "properties": {
        "movesFound": {
          "$ref": "#/definitions/SearchMoves"
        }
      }
    },
    "MoveStatus": {
      "type": "string",
      "enum": [
        "DRAFT",
        "SUBMITTED",
        "APPROVED",
        "CANCELED"
      ]
    },
    "SearchMove": {
      "type": "object",
      "properties": {
        "branch": {
          "type": "string"
        },
        "destinationDutyLocationPostalCode": {
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5})$",
          "example": "90210"
        },
        "destinationGBLOC": {
          "$ref": "#/definitions/GBLOC"
        },
        "dodID": {
          "type": "string",
          "x-nullable": true,
          "example": "1234567890"
        },
        "firstName": {
          "type": "string",
          "x-nullable": true,
          "example": "John"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "lastName": {
          "type": "string",
          "x-nullable": true,
          "example": "Doe"
        },
        "locator": {
          "type": "string"
        },
        "orderType": {
          "type": "string"
        },
        "originDutyLocationPostalCode": {
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5})$",
          "example": "90210"
        },
        "originGBLOC": {
          "$ref": "#/definitions/GBLOC"
        },
        "requestedDeliveryDate": {
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "requestedPickupDate": {
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "shipmentsCount": {
          "type": "integer"
        },
        "status": {
          "$ref": "#/definitions/MoveStatus"
        }
      }
    },
    "SearchMoves": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/SearchMove"
      }
    },
    "movesSince": {
      "type": "object",
      "properties": {
        "moveSinceDate": {
          "description": "moves retrieved since this date",
          "type": "string",
          "format": "date-time"
        },
        "numMoves": {
          "description": "number of moves to return",
          "type": "integer"
        }
      }
    }
  },
  "responses": {
    "InvalidRequest": {
      "description": "The request was invalid as called.",
      "schema": {
        "$ref": "#/definitions/ClientError"
      }
    },
    "ServerError": {
      "description": "An unexpected error has occurred in the server.",
      "schema": {
        "$ref": "#/definitions/ClientError"
      }
    }
  },
  "tags": [
    {
      "description": "tag to describe test endpoints",
      "name": "test"
    },
    {
      "description": "describes all endpoints relating to moves",
      "name": "moves"
    }
  ]
}`))
}
