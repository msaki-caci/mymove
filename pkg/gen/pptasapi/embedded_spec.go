// Code generated by go-swagger; DO NOT EDIT.

package pptasapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The Prime API is a RESTful API that enables the Prime contractor to request\ninformation about upcoming moves, update the details and status of those moves,\nand make payment requests. It uses Mutual TLS for authentication procedures.\n\nAll endpoints are located at ` + "`" + `/prime/v1/` + "`" + `.\n",
    "title": "MilMove PPTAS API",
    "contact": {
      "email": "milmove-developers@caci.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "0.0.1"
  },
  "host": "primelocal",
  "basePath": "/prime/pptas",
  "paths": {
    "/moves": {
      "get": {
        "description": "Gets all moves that have been reviewed and approved by the TOO. The ` + "`" + `since` + "`" + ` parameter can be used to filter this\nlist down to only the moves that have been updated since the provided timestamp. A move will be considered\nupdated if the ` + "`" + `updatedAt` + "`" + ` timestamp on the move or on its orders, shipments, service items, or payment\nrequests, is later than the provided date and time.\n\n**WIP**: Include what causes moves to leave this list. Currently, once the ` + "`" + `availableToPrimeAt` + "`" + ` timestamp has\nbeen set, that move will always appear in this list.\n",
        "produces": [
          "application/json"
        ],
        "tags": [
          "moves"
        ],
        "summary": "listMoves",
        "operationId": "listMoves",
        "parameters": [
          {
            "type": "string",
            "format": "date-time",
            "description": "Only return moves updated since this time. Formatted like \"2021-07-23T18:30:47.116Z\"",
            "name": "since",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved moves. A successful fetch might still return zero moves.",
            "schema": {
              "$ref": "#/definitions/ListMoves"
            }
          },
          "401": {
            "$ref": "#/responses/PermissionDenied"
          },
          "403": {
            "$ref": "#/responses/PermissionDenied"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      }
    },
    "/test/get-moves-since": {
      "post": {
        "description": "summary2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "moves"
        ],
        "summary": "summary",
        "operationId": "movesSince",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/movesSince"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Moves returned sucessfully",
            "schema": {
              "$ref": "#/definitions/GetMovesSinceResponse"
            }
          },
          "400": {
            "$ref": "#/responses/PermissionDenied"
          },
          "401": {
            "$ref": "#/responses/PermissionDenied"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      }
    }
  },
  "definitions": {
    "ClientError": {
      "type": "object",
      "required": [
        "title",
        "detail",
        "instance"
      ],
      "properties": {
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string",
          "format": "uuid"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "GBLOC": {
      "type": "string",
      "enum": [
        "AGFM",
        "APAT",
        "BGAC",
        "BGNC",
        "BKAS",
        "CFMQ",
        "CLPK",
        "CNNQ",
        "DMAT",
        "GSAT",
        "HAFC",
        "HBAT",
        "JEAT",
        "JENQ",
        "KKFA",
        "LHNQ",
        "LKNQ",
        "MAPK",
        "MAPS",
        "MBFL",
        "MLNQ",
        "XXXX"
      ]
    },
    "GetMovesSinceResponse": {
      "type": "object",
      "properties": {
        "movesFound": {
          "$ref": "#/definitions/SearchMoves"
        }
      }
    },
    "ListMove": {
      "description": "An abbreviated definition for a move, without all the nested information (shipments, service items, etc). Used to fetch a list of moves more efficiently.\n",
      "type": "object",
      "properties": {
        "availableToPrimeAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true,
          "readOnly": true
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "moveCode": {
          "type": "string",
          "readOnly": true,
          "example": "HYXFJF"
        },
        "orderID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "ppmType": {
          "type": "string",
          "enum": [
            "FULL",
            "PARTIAL"
          ]
        },
        "referenceId": {
          "type": "string",
          "example": "1001-3456"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "ListMoves": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ListMove"
      }
    },
    "MoveStatus": {
      "type": "string",
      "enum": [
        "DRAFT",
        "SUBMITTED",
        "APPROVED",
        "CANCELED"
      ]
    },
    "SearchMove": {
      "type": "object",
      "properties": {
        "branch": {
          "type": "string"
        },
        "destinationDutyLocationPostalCode": {
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5})$",
          "example": "90210"
        },
        "destinationGBLOC": {
          "$ref": "#/definitions/GBLOC"
        },
        "dodID": {
          "type": "string",
          "x-nullable": true,
          "example": "1234567890"
        },
        "firstName": {
          "type": "string",
          "x-nullable": true,
          "example": "John"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "lastName": {
          "type": "string",
          "x-nullable": true,
          "example": "Doe"
        },
        "locator": {
          "type": "string"
        },
        "orderType": {
          "type": "string"
        },
        "originDutyLocationPostalCode": {
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5})$",
          "example": "90210"
        },
        "originGBLOC": {
          "$ref": "#/definitions/GBLOC"
        },
        "requestedDeliveryDate": {
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "requestedPickupDate": {
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "shipmentsCount": {
          "type": "integer"
        },
        "status": {
          "$ref": "#/definitions/MoveStatus"
        }
      }
    },
    "SearchMoves": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/SearchMove"
      }
    },
    "movesSince": {
      "type": "object",
      "properties": {
        "moveSinceDate": {
          "description": "moves retrieved since this date",
          "type": "string",
          "format": "date-time"
        },
        "numMoves": {
          "description": "number of moves to return",
          "type": "integer"
        }
      }
    }
  },
  "responses": {
    "PermissionDenied": {
      "description": "The request was denied.",
      "schema": {
        "$ref": "#/definitions/ClientError"
      }
    },
    "ServerError": {
      "description": "An unexpected error has occurred in the server.",
      "schema": {
        "$ref": "#/definitions/ClientError"
      }
    }
  },
  "tags": [
    {
      "name": "moves"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The Prime API is a RESTful API that enables the Prime contractor to request\ninformation about upcoming moves, update the details and status of those moves,\nand make payment requests. It uses Mutual TLS for authentication procedures.\n\nAll endpoints are located at ` + "`" + `/prime/v1/` + "`" + `.\n",
    "title": "MilMove PPTAS API",
    "contact": {
      "email": "milmove-developers@caci.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "0.0.1"
  },
  "host": "primelocal",
  "basePath": "/prime/pptas",
  "paths": {
    "/moves": {
      "get": {
        "description": "Gets all moves that have been reviewed and approved by the TOO. The ` + "`" + `since` + "`" + ` parameter can be used to filter this\nlist down to only the moves that have been updated since the provided timestamp. A move will be considered\nupdated if the ` + "`" + `updatedAt` + "`" + ` timestamp on the move or on its orders, shipments, service items, or payment\nrequests, is later than the provided date and time.\n\n**WIP**: Include what causes moves to leave this list. Currently, once the ` + "`" + `availableToPrimeAt` + "`" + ` timestamp has\nbeen set, that move will always appear in this list.\n",
        "produces": [
          "application/json"
        ],
        "tags": [
          "moves"
        ],
        "summary": "listMoves",
        "operationId": "listMoves",
        "parameters": [
          {
            "type": "string",
            "format": "date-time",
            "description": "Only return moves updated since this time. Formatted like \"2021-07-23T18:30:47.116Z\"",
            "name": "since",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved moves. A successful fetch might still return zero moves.",
            "schema": {
              "$ref": "#/definitions/ListMoves"
            }
          },
          "401": {
            "description": "The request was denied.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "403": {
            "description": "The request was denied.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "500": {
            "description": "An unexpected error has occurred in the server.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        }
      }
    },
    "/test/get-moves-since": {
      "post": {
        "description": "summary2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "moves"
        ],
        "summary": "summary",
        "operationId": "movesSince",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/movesSince"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Moves returned sucessfully",
            "schema": {
              "$ref": "#/definitions/GetMovesSinceResponse"
            }
          },
          "400": {
            "description": "The request was denied.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "401": {
            "description": "The request was denied.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          },
          "500": {
            "description": "An unexpected error has occurred in the server.",
            "schema": {
              "$ref": "#/definitions/ClientError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ClientError": {
      "type": "object",
      "required": [
        "title",
        "detail",
        "instance"
      ],
      "properties": {
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string",
          "format": "uuid"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "GBLOC": {
      "type": "string",
      "enum": [
        "AGFM",
        "APAT",
        "BGAC",
        "BGNC",
        "BKAS",
        "CFMQ",
        "CLPK",
        "CNNQ",
        "DMAT",
        "GSAT",
        "HAFC",
        "HBAT",
        "JEAT",
        "JENQ",
        "KKFA",
        "LHNQ",
        "LKNQ",
        "MAPK",
        "MAPS",
        "MBFL",
        "MLNQ",
        "XXXX"
      ]
    },
    "GetMovesSinceResponse": {
      "type": "object",
      "properties": {
        "movesFound": {
          "$ref": "#/definitions/SearchMoves"
        }
      }
    },
    "ListMove": {
      "description": "An abbreviated definition for a move, without all the nested information (shipments, service items, etc). Used to fetch a list of moves more efficiently.\n",
      "type": "object",
      "properties": {
        "availableToPrimeAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true,
          "readOnly": true
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "eTag": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "1f2270c7-7166-40ae-981e-b200ebdf3054"
        },
        "moveCode": {
          "type": "string",
          "readOnly": true,
          "example": "HYXFJF"
        },
        "orderID": {
          "type": "string",
          "format": "uuid",
          "example": "c56a4180-65aa-42ec-a945-5fd21dec0538"
        },
        "ppmType": {
          "type": "string",
          "enum": [
            "FULL",
            "PARTIAL"
          ]
        },
        "referenceId": {
          "type": "string",
          "example": "1001-3456"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "ListMoves": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ListMove"
      }
    },
    "MoveStatus": {
      "type": "string",
      "enum": [
        "DRAFT",
        "SUBMITTED",
        "APPROVED",
        "CANCELED"
      ]
    },
    "SearchMove": {
      "type": "object",
      "properties": {
        "branch": {
          "type": "string"
        },
        "destinationDutyLocationPostalCode": {
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5})$",
          "example": "90210"
        },
        "destinationGBLOC": {
          "$ref": "#/definitions/GBLOC"
        },
        "dodID": {
          "type": "string",
          "x-nullable": true,
          "example": "1234567890"
        },
        "firstName": {
          "type": "string",
          "x-nullable": true,
          "example": "John"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "lastName": {
          "type": "string",
          "x-nullable": true,
          "example": "Doe"
        },
        "locator": {
          "type": "string"
        },
        "orderType": {
          "type": "string"
        },
        "originDutyLocationPostalCode": {
          "type": "string",
          "format": "zip",
          "title": "ZIP",
          "pattern": "^(\\d{5})$",
          "example": "90210"
        },
        "originGBLOC": {
          "$ref": "#/definitions/GBLOC"
        },
        "requestedDeliveryDate": {
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "requestedPickupDate": {
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "shipmentsCount": {
          "type": "integer"
        },
        "status": {
          "$ref": "#/definitions/MoveStatus"
        }
      }
    },
    "SearchMoves": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/SearchMove"
      }
    },
    "movesSince": {
      "type": "object",
      "properties": {
        "moveSinceDate": {
          "description": "moves retrieved since this date",
          "type": "string",
          "format": "date-time"
        },
        "numMoves": {
          "description": "number of moves to return",
          "type": "integer"
        }
      }
    }
  },
  "responses": {
    "PermissionDenied": {
      "description": "The request was denied.",
      "schema": {
        "$ref": "#/definitions/ClientError"
      }
    },
    "ServerError": {
      "description": "An unexpected error has occurred in the server.",
      "schema": {
        "$ref": "#/definitions/ClientError"
      }
    }
  },
  "tags": [
    {
      "name": "moves"
    }
  ]
}`))
}
