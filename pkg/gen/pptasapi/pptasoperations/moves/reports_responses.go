// Code generated by go-swagger; DO NOT EDIT.

package moves

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/pptasmessages"
)

// ReportsOKCode is the HTTP code returned for type ReportsOK
const ReportsOKCode int = 200

/*
ReportsOK Successfully retrieved moves. A successful fetch might still return zero moves.

swagger:response reportsOK
*/
type ReportsOK struct {

	/*
	  In: Body
	*/
	Payload pptasmessages.Reports `json:"body,omitempty"`
}

// NewReportsOK creates ReportsOK with default headers values
func NewReportsOK() *ReportsOK {

	return &ReportsOK{}
}

// WithPayload adds the payload to the reports o k response
func (o *ReportsOK) WithPayload(payload pptasmessages.Reports) *ReportsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the reports o k response
func (o *ReportsOK) SetPayload(payload pptasmessages.Reports) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReportsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = pptasmessages.Reports{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ReportsUnauthorizedCode is the HTTP code returned for type ReportsUnauthorized
const ReportsUnauthorizedCode int = 401

/*
ReportsUnauthorized The request was denied.

swagger:response reportsUnauthorized
*/
type ReportsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *pptasmessages.ClientError `json:"body,omitempty"`
}

// NewReportsUnauthorized creates ReportsUnauthorized with default headers values
func NewReportsUnauthorized() *ReportsUnauthorized {

	return &ReportsUnauthorized{}
}

// WithPayload adds the payload to the reports unauthorized response
func (o *ReportsUnauthorized) WithPayload(payload *pptasmessages.ClientError) *ReportsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the reports unauthorized response
func (o *ReportsUnauthorized) SetPayload(payload *pptasmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReportsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReportsForbiddenCode is the HTTP code returned for type ReportsForbidden
const ReportsForbiddenCode int = 403

/*
ReportsForbidden The request was denied.

swagger:response reportsForbidden
*/
type ReportsForbidden struct {

	/*
	  In: Body
	*/
	Payload *pptasmessages.ClientError `json:"body,omitempty"`
}

// NewReportsForbidden creates ReportsForbidden with default headers values
func NewReportsForbidden() *ReportsForbidden {

	return &ReportsForbidden{}
}

// WithPayload adds the payload to the reports forbidden response
func (o *ReportsForbidden) WithPayload(payload *pptasmessages.ClientError) *ReportsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the reports forbidden response
func (o *ReportsForbidden) SetPayload(payload *pptasmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReportsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReportsInternalServerErrorCode is the HTTP code returned for type ReportsInternalServerError
const ReportsInternalServerErrorCode int = 500

/*
ReportsInternalServerError An unexpected error has occurred in the server.

swagger:response reportsInternalServerError
*/
type ReportsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *pptasmessages.ClientError `json:"body,omitempty"`
}

// NewReportsInternalServerError creates ReportsInternalServerError with default headers values
func NewReportsInternalServerError() *ReportsInternalServerError {

	return &ReportsInternalServerError{}
}

// WithPayload adds the payload to the reports internal server error response
func (o *ReportsInternalServerError) WithPayload(payload *pptasmessages.ClientError) *ReportsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the reports internal server error response
func (o *ReportsInternalServerError) SetPayload(payload *pptasmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReportsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
